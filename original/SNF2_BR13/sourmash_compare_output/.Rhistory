et3 <- exactTest(treatment3_counts, pair=c("control", "salmonella"))
tags3<-topTags(et3, sort.by="PValue", p.value=1, n=3000)
et4 <- exactTest(treatment4_counts, pair=c("control", "salmonella"))
tags4<-topTags(et4, sort.by="PValue", p.value=1, n=2000)
et1 <- exactTest(treatment1_counts, pair=c("control", "salmonella"))
tags1<-topTags(et1, sort.by="PValue", p.value=1, n=2000)
tags1_annot<-add_rownames(tags1[[1]], "number")
tags1_annot<-merge(tags1_annot, counts_bac[,1:2], by="number")
write.csv(tags1_annot, file="edgeR_t1_bac_salm_fdr1.csv", row.names=F)
head(salm_annot)
library(dplyr)
salm_annot <- add_rownames(salm_annot, "number")
tags1_annot<-merge(tags1_annot, counts_bac[,1:2], by="number")
tags1_annot<-add_rownames(tags1[[1]], "number")
tags1_annot<-merge(tags1_annot, counts_bac[,1:2], by="number")
salm_annot
tags1_annot<-merge(tags1_annot, salm_annot[,1:2], by="number")
write.csv(tags1_annot, file="edgeR_t1_bac_salm_fdr1.csv", row.names=F)
et2 <- exactTest(treatment2_counts, pair=c("control", "salmonella"))
tags2<-topTags(et2, sort.by="PValue", p.value=1, n=2000)
tags2_annot<-add_rownames(tags2[[1]], "number")
tags2_annot<-merge(tags2_annot, salm_annot[,1:2], by="number")
write.csv(tags2_annot, file="edgeR_t2_bac_salm_fdr1.csv", row.names=F)
et3 <- exactTest(treatment3_counts, pair=c("control", "salmonella"))
tags3<-topTags(et3, sort.by="PValue", p.value=1, n=3000)
tags3_annot<-add_rownames(tags3[[1]], "number")
tags3_annot<-merge(tags3_annot, salm_annot[,1:2], by="number")
write.csv(tags3_annot, file="edgeR_t3_bac_salm_fdr1.csv", row.names=F)
et4 <- exactTest(treatment4_counts, pair=c("control", "salmonella"))
tags4<-topTags(et4, sort.by="PValue", p.value=1, n=2000)
write.csv(tags4$table, file="edgeR_salmonella_bac_difex_t4.csv")
et5 <- exactTest(treatment5_counts, pair=c("control", "salmonella"))
tags4_annot<-add_rownames(tags4[[1]], "number")
tags4_annot<-merge(tags4_annot, counts_bac[,1:2], by="number")
tags4_annot<-merge(tags4_annot, salm_annot[,1:2], by="number")
write.csv(tags4_annot, file="t4_bac_salm_fdr1.csv", row.names=F)
all_snf2_br13[[68]]
k6_plot
k6_plot, k9_plot
k6_plot k9_plot k12_plot k15_plot k18_plot k21_plot
k6_plot; k9_plot
k6
ifelse(k6[,2]>=.6, .6, 0)), 1
ifelse(k6[,2]>=.6, .6, 0)
ifelse(k12[,2]>=.6, .6, 0)
min(ifelse(k12[,2]>=.6, .6, 0))
individual_plots<-function(data_to_be_plotted, title) {
unique(data_to_be_plotted$)
library(ggplot2)
require(scales)
ggplot(data_to_be_plotted, aes(x = scaled_values, y = similarity_snf2_br13, ymin=similarity_snf2_br13-standard_err_snf2_br13, ymax=similarity_snf2_br13+standard_err_snf2_br13)) +
geom_point() + ggtitle(sprintf("%s", title)) +
ylim((min(ifelse(data_to_be_plotted[,2]>=.6, .6, 0))), 1) +
theme(axis.text.x = element_text(angle=45)) +
ylab("Average Percent Similarity") + xlab("Sourmash Scaled Parameter") +
scale_x_log10(breaks=c(500, 5000, 20000, 40000, 80000, 160000, 240000, 480000), labels = comma) +
geom_errorbar(width=0.2)
}
individual_plots<-function(data_to_be_plotted, title) {
library(ggplot2)
require(scales)
ggplot(data_to_be_plotted, aes(x = scaled_values, y = similarity_snf2_br13, ymin=similarity_snf2_br13-standard_err_snf2_br13, ymax=similarity_snf2_br13+standard_err_snf2_br13)) +
geom_point() + ggtitle(sprintf("%s", title)) +
ylim((min(ifelse(data_to_be_plotted[,2]>=.6, .6, 0))), 1) +
theme(axis.text.x = element_text(angle=45)) +
ylab("Average Percent Similarity") + xlab("Sourmash Scaled Parameter") +
scale_x_log10(breaks=c(500, 5000, 20000, 40000, 80000, 160000, 240000, 480000), labels = comma) +
geom_errorbar(width=0.2)
}
k12_plot<-individual_plots(k12, "k12")
k12_plot
k12_plot2<-individual_plots(k12, "k12")
k12_plot2
individual_plots<-function(data_to_be_plotted, title) {
library(ggplot2)
require(scales)
ggplot(data_to_be_plotted, aes(x = scaled_values, y = similarity_snf2_br13, ymin=similarity_snf2_br13-standard_err_snf2_br13, ymax=similarity_snf2_br13+standard_err_snf2_br13)) +
geom_point() + ggtitle(sprintf("%s", title)) +
# set the y axis-if all points are about .6, start at .6. If not, start at 0
ylim((min(ifelse(data_to_be_plotted[,2]>=.6, .6, 0))), 1) +
# rotate x axis numbers 45 degrees
theme(axis.text.x = element_text(angle=45)) +
# label y and x axes
ylab("Average Percent Similarity") + xlab("Sourmash Scaled Parameter") +
# use a log scale, with breaks at scaled values
scale_x_log10(breaks=c(scaled_values), labels = comma) +
geom_errorbar(width=0.2)
}
k12_plot<-individual_plots(k12, "k12")
k12_plot
k15_plot<- plot
k15_plot<-individual_plots(k15, "k15")
k15_plot
standard_error<-function(sourmash_compare_matrix) {
scm = sourmash_compare_matrix[upper.tri(sourmash_compare_matrix, diag = TRUE)]
sd(scm)/sqrt(length(scm))
}
setwd("/Users/taylorreiter/Desktop/DIB/yeast_raw_fastq/SNF2_BR13/sourmash_compare_output/")
csv_files<-list.files(".","csv$")
csv_files
csv_labels<-list.files(".", "txt$")
csv_labels
csv_files<-list.files(".","csv$")
# Read label file names (txt)
snf2_br13_numpy_in<-cbind(csv_files_no_k1000, csv_labels_no_k1000)
all_snf2_br13<-apply(snf2_br13_numpy_in, 1, numpy_in)
# Check format
head(all_snf2_br13)
all_snf2_br13[[68]]
similarity_snf2_br13<-sapply(all_snf2_br13, similarity)
standard_err_snf2_br13<-sapply(all_snf2_br13,standard_error)
k_size_snf2_br13<-sapply(all_snf2_br13, determine_k_size)
determine_scale_size<-function(input_file){
library(stringr)
# regex for --scale parameter:
scale_size_regex<-"\\.[0-9]{3,6}\\."
scale_extraction_one<-str_extract(input_file, scale_size_regex)
scale_size_regex2<-"[0-9]{3,6}"
scale_size_regex2<-str_extract(scale_extraction_one, scale_size_regex2)
}
determine_k_size<-function(input_file){
library(stringr)
# regex for k size:
k_size_regex<-"\\.[0-9]{1,2}\\."
k_extraction_one<-str_extract(input_file, k_size)
k_size_regex2<-"[0-9]{1,2}"
k_size<-str_extract(k_extraction_one, k_size_regex2)
}
similarity<-function(sourmash_compare_matrix){
sum(sourmash_compare_matrix[upper.tri(sourmash_compare_matrix, diag=T)])/
(length(sourmash_compare_matrix[upper.tri(sourmash_compare_matrix, diag=T)]))
}
standard_error<-function(sourmash_compare_matrix) {
scm = sourmash_compare_matrix[upper.tri(sourmash_compare_matrix, diag = TRUE)]
sd(scm)/sqrt(length(scm))
}
k_size_snf2_br13<-sapply(all_snf2_br13, determine_k_size)
scale_size_snf2_br13<-sapply(all_snf2_br13, determine_scale_size)
snf2_br13_sim_stderr<-cbind(csv_files, similarity_snf2_br13, standard_err_snf2_br13, k_size_snf2_br13, scale_size_snf2_br13)
length(similarity_snf2_br13)
length(standard_err_snf2_br13)
length(k_size_snf2_br13)
length(scale_size_snf2_br13)
similarity_snf2_br13
standard_err_snf2_br13
k_size_snf2_br13
scale_size_snf2_br13
determine_k_size(all_snf2_br13[[2]])
ksize<-determine_k_size(all_snf2_br13[[2]])
ksize
head(all_snf2_br13)
numpy_in<-function(row) {
csv_filename = row[1]
labels_filename = row[2]
# read in numpy matrix
numpy_mat<-read.csv(csv_filename, header= F)
# import labels
numpy_labs<-read.delim(labels_filename, header = F)
# add labels to matrix
numpy_obj<-cbind(numpy_labs, numpy_mat)
numpy_obj <- data.frame(numpy_obj[,-1], row.names=numpy_obj[,1])
numpy_labs<-as.vector(numpy_labs[,1])
colnames(numpy_obj) <- numpy_labs
return(numpy_obj)
}
# Process files for downstream application
# determine k sizes used for sourmash compute and compare (regex that acts on file name)
determine_k_size<-function(input_file){
library(stringr)
# regex for k size:
k_size_regex<-"\\.[0-9]{1,2}\\."
k_extraction_one<-str_extract(input_file, k_size)
k_size_regex2<-"[0-9]{1,2}"
k_size<-str_extract(k_extraction_one, k_size_regex2)
}
# determine scale sizes used for sourmash compute (regex that acts on file name)
determine_scale_size<-function(input_file){
library(stringr)
# regex for --scale parameter:
scale_size_regex<-"\\.[0-9]{3,6}\\."
scale_extraction_one<-str_extract(input_file, scale_size_regex)
scale_size_regex2<-"[0-9]{3,6}"
scale_size_regex2<-str_extract(scale_extraction_one, scale_size_regex2)
}
# Functions to enable standard curve plots
similarity<-function(sourmash_compare_matrix){
sum(sourmash_compare_matrix[upper.tri(sourmash_compare_matrix, diag=T)])/
(length(sourmash_compare_matrix[upper.tri(sourmash_compare_matrix, diag=T)]))
}
standard_error<-function(sourmash_compare_matrix) {
scm = sourmash_compare_matrix[upper.tri(sourmash_compare_matrix, diag = TRUE)]
sd(scm)/sqrt(length(scm))
}
setwd("/Users/taylorreiter/Desktop/DIB/yeast_raw_fastq/SNF2_BR13/sourmash_compare_output/")
csv_files<-list.files(".","csv$")
csv_labels<-list.files(".", "txt$")
csv_files
csv_labels
snf2_br13_numpy_in<-cbind(csv_files, csv_labels)
all_snf2_br13<-apply(snf2_br13_numpy_in, 1, numpy_in)
snf2_br13_numpy_in
all_snf2_br13<-apply(snf2_br13_numpy_in, 1, numpy_in)
numpy_in<-function(row) {
csv_filename = row[1]
labels_filename = row[2]
# read in numpy matrix
numpy_mat<-read.csv(csv_filename, header= F)
# remove duplicate rows, if they exist
numpy_mat[!duplicated(numpy_mat), ]
# remove duplicate columns, if they exist
numpy_mat[,!duplicated(numpy_mat)]
# import labels
numpy_labs<-read.delim(labels_filename, header = F)
# add labels to matrix
numpy_obj<-cbind(numpy_labs, numpy_mat)
numpy_obj <- data.frame(numpy_obj[,-1], row.names=numpy_obj[,1])
numpy_labs<-as.vector(numpy_labs[,1])
colnames(numpy_obj) <- numpy_labs
return(numpy_obj)
}
all_snf2_br13<-apply(snf2_br13_numpy_in, 1, numpy_in)
numpy_in<-function(row) {
csv_filename = row[1]
labels_filename = row[2]
# read in numpy matrix
numpy_mat<-read.csv(csv_filename, header= F)
# remove duplicate rows, if they exist
numpy_mat[!duplicated(numpy_mat[1,]), ]
# remove duplicate columns, if they exist
numpy_mat[,!duplicated(numpy_mat[,1])]
# import labels
numpy_labs<-read.delim(labels_filename, header = F)
# add labels to matrix
numpy_obj<-cbind(numpy_labs, numpy_mat)
numpy_obj <- data.frame(numpy_obj[,-1], row.names=numpy_obj[,1])
numpy_labs<-as.vector(numpy_labs[,1])
colnames(numpy_obj) <- numpy_labs
return(numpy_obj)
}
snf2_br13_numpy_in<-cbind(csv_files, csv_labels)
snf2_br13_numpy_in
all_snf2_br13<-apply(snf2_br13_numpy_in, 1, numpy_in)
snf2_br13_numpy_in
read.csv("compared.12.1000")
read.csv("compared.12.1000.csv")
read.csv("compared.12.1000.csv", header = F)
csv_labels<-list.files(".", "txt$")
csv_labels
read.table("compared.12.1000.labels.txt")
numpy_in<-function(row) {
csv_filename = row[1]
labels_filename = row[2]
# read in numpy matrix
numpy_mat<-read.csv(csv_filename, header= F)
# import labels
numpy_labs<-read.delim(labels_filename, header = F)
# add labels to matrix
numpy_obj<-cbind(numpy_labs, numpy_mat)
# remove duplicate rows, if they exist
numpy_obj[!duplicated(numpy_obj[1,]), ]
# remove duplicate columns, if they exist
numpy_obj[,!duplicated(numpy_obj[,1])]
numpy_obj <- data.frame(numpy_obj[,-1], row.names=numpy_obj[,1])
numpy_labs<-as.vector(numpy_labs[,1])
colnames(numpy_obj) <- numpy_labs
return(numpy_obj)
}
all_snf2_br13<-apply(snf2_br13_numpy_in, 1, numpy_in)
all_snf2_br13<-apply(snf2_br13_numpy_in, 1, numpy_in)
numpy_mat1<-read.csv("compared.12.1000.csv", header= F)
# import labels
numpy_labs1<-read.delim("compared.12.1000.labels.txt", header = F)
# add labels to matrix
numpy_obj1<-cbind(numpy_labs, numpy_mat)
numpy_obj1<-cbind(numpy_labs1, numpy_mat1)
numpy_obj1
numpy_obj1[!duplicated(numpy_obj1[1,]), ]
numpy_obj1[1,]
numpy_obj1[1,]
numpy_obj1[,1]
numpy_obj1[,!duplicated(numpy_obj1[,1])]
numpy_obj1[,!duplicated(numpy_obj1[1,])]
numpy_obj[,!duplicated(numpy_obj[,1])]
numpy_obj1[,!duplicated(numpy_obj1[,1])]
numpy_obj1[!duplicated(numpy_obj1[1,]),]
numpy_obj1[1,]
numpy_obj1[1,]
numpy_obj1[1,]
numpy_obj1[,!duplicated(numpy_obj1[,1])]
!duplicated(numpy_obj1[,1])
numpy_obj1[,duplicated(numpy_obj1[,1])]
numpy_in<-function(row) {
csv_filename = row[1]
labels_filename = row[2]
# read in numpy matrix
numpy_mat<-read.csv(csv_filename, header= F)
# import labels
numpy_labs<-read.delim(labels_filename, header = F)
# add labels to matrix
numpy_obj<-cbind(numpy_labs, numpy_mat)
numpy_obj <- data.frame(numpy_obj[,-1], row.names=numpy_obj[,1])
numpy_labs<-as.vector(numpy_labs[,1])
colnames(numpy_obj) <- numpy_labs
return(numpy_obj)
}
setwd("/Users/taylorreiter/Desktop/DIB/yeast_raw_fastq/SNF2_BR13/sourmash_compare_output/")
# Read in csv files of comparisons
# Read  csv file names
csv_files<-list.files(".","csv$")
# Read label file names (txt)
csv_labels<-list.files(".", "txt$")
snf2_br13_numpy_in<-cbind(csv_files, csv_labels)
length(csv_files)
length(csv_labels)
csv_labels
csv_labels<-list.files(".", "txt$")
length(csv_labels)
csv_files<-list.files(".","csv$")
csv_labels<-list.files(".", "txt$")
snf2_br13_numpy_in<-cbind(csv_files, csv_labels)
all_snf2_br13<-apply(snf2_br13_numpy_in, 1, numpy_in)
head(all_snf2_br13)
all_snf2_br13[[68]]
similarity_snf2_br13<-sapply(all_snf2_br13, similarity)
standard_err_snf2_br13<-sapply(all_snf2_br13, standard_error)
k_size_snf2_br13<-sapply(all_snf2_br13, determine_k_size)
determine_k_size<-function(input_file){
library(stringr)
# regex for k size:
k_size_regex<-"\\.[0-9]{1,2}\\."
k_extraction_one<-str_extract(input_file, k_size)
k_size_regex2<-"[0-9]{1,2}"
k_size<-str_extract(k_extraction_one, k_size_regex2)
}
determine_scale_size<-function(input_file){
library(stringr)
# regex for --scale parameter:
scale_size_regex<-"\\.[0-9]{3,6}\\."
scale_extraction_one<-str_extract(input_file, scale_size_regex)
scale_size_regex2<-"[0-9]{3,6}"
scale_size_regex2<-str_extract(scale_extraction_one, scale_size_regex2)
}
standard_err_snf2_br13<-sapply(all_snf2_br13, standard_error)
k_size_snf2_br13<-sapply(all_snf2_br13, determine_k_size)
determine_k_size<-function(input_file){
library(stringr)
# regex for k size:
k_size_regex<-"\\.[0-9]{1,2}\\."
k_extraction_one<-str_extract(input_file, k_size_regex)
k_size_regex2<-"[0-9]{1,2}"
k_size<-str_extract(k_extraction_one, k_size_regex2)
}
k_size_snf2_br13<-sapply(all_snf2_br13, determine_k_size)
k_size_snf2_br13
head(all_snf2_br13)
all_snf2_br13<-sapply(snf2_br13_numpy_in, 1, numpy_in)
all_snf2_br13<-sapply(snf2_br13_numpy_in, numpy_in)
names(all_snf2_br13)<-csv_files
all_snf2_br13
determine_k_size<-function(input_csv_file){
library(stringr)
# regex for k size:
k_size_regex<-"\\.[0-9]{1,2}\\."
k_extraction_one<-str_extract(input_csv_file, k_size_regex)
k_size_regex2<-"[0-9]{1,2}"
k_size<-str_extract(k_extraction_one, k_size_regex2)
}
determine_scale_size<-function(input_csv_file){
library(stringr)
# regex for --scale parameter:
scale_size_regex<-"\\.[0-9]{3,6}\\."
scale_extraction_one<-str_extract(input_csv_file, scale_size_regex)
scale_size_regex2<-"[0-9]{3,6}"
scale_size_regex2<-str_extract(scale_extraction_one, scale_size_regex2)
}
similarity_snf2_br13<-sapply(all_snf2_br13, similarity)
standard_err_snf2_br13<-sapply(all_snf2_br13, standard_error)
k_size_snf2_br13<-sapply(csv_files, determine_k_size)
scale_size_snf2_br13<-sapply(csv_files, determine_scale_size)
snf2_br13_sim_stderr<-cbind(csv_files, similarity_snf2_br13, standard_err_snf2_br13, k_size_snf2_br13, scale_size_snf2_br13)
snf2_br13_sim_stderr<-as.data.frame(snf2_br13_sim_stderr)
cols = c(2, 3, 4, 5)
snf2_br13_sim_stderr[,cols] = apply(snf2_br13_sim_stderr[,cols], 2, function(x) as.numeric(as.character(x)))
# Plot all data, faceted on k size
library(ggplot2)
snf2_br13_sim_stderr_plot<-ggplot(snf2_br13_sim_stderr, aes(x = scaled_values, y = similarity_snf2_br13, ymin=similarity_snf2_br13-standard_err_snf2_br13, ymax=similarity_snf2_br13+standard_err_snf2_br13)) + geom_point() + ggtitle("All") + ylim(0,1) + theme(axis.text.x = element_text(angle=45))  + ylab("Average Percent Similarity") + xlab("Sourmash Scaled Parameter")  + scale_x_log10(breaks=c(500, 5000, 20000, 40000, 80000, 160000, 240000, 480000), labels = comma) +  geom_errorbar(width=0.2) + facet_wrap(~ k_values)
snf2_br13_sim_stderr_plot
head(snf2_br13_sim_stderr)
all_snf2_br13<-apply(snf2_br13_numpy_in, 1, numpy_in)
similarity_snf2_br13<-sapply(all_snf2_br13, similarity)
standard_err_snf2_br13<-sapply(all_snf2_br13, standard_error)
k_size_snf2_br13<-sapply(csv_files, determine_k_size)
scale_size_snf2_br13<-sapply(csv_files, determine_scale_size)
snf2_br13_sim_stderr<-cbind(csv_files, similarity_snf2_br13, standard_err_snf2_br13, k_size_snf2_br13, scale_size_snf2_br13)
snf2_br13_sim_stderr<-as.data.frame(snf2_br13_sim_stderr)
cols = c(2, 3, 4, 5)
snf2_br13_sim_stderr[,cols] = apply(snf2_br13_sim_stderr[,cols], 2, function(x) as.numeric(as.character(x)))
head(snf2_br13_sim_stderr)
snf2_br13_sim_stderr<-cbind(similarity_snf2_br13, standard_err_snf2_br13, k_size_snf2_br13, scale_size_snf2_br13)
snf2_br13_sim_stderr
similarity_snf2_br13
standard_err_snf2_br13
k_size_snf2_br13
scale_size_snf2_br13
snf2_br13_sim_stderr<-cbind(similarity_snf2_br13, standard_err_snf2_br13, k_size_snf2_br13, scale_size_snf2_br13)
snf2_br13_sim_stderr
cols = c(1, 2, 3, 4)
snf2_br13_sim_stderr[,cols] = apply(snf2_br13_sim_stderr[,cols], 2, function(x) as.numeric(as.character(x)))
head(snf2_br13_sim_stderr)
snf2_br13_sim_stderr[,cols] = apply(snf2_br13_sim_stderr[,cols], 2, function(x) as.numeric(as.character(x)))
head(snf2_br13_sim_stderr)
class(snf2_br13_sim_stderr[2])
snf2_br13_sim_stderr[,cols] = apply(snf2_br13_sim_stderr[,cols], 2, function(x) {as.numeric(as.character(x))})
head(snf2_br13_sim_stderr)
class(snf2_br13_sim_stderr[2])
cols = c(1, 2, 3, 4)
snf2_br13_sim_stderr<-cbind(similarity_snf2_br13, standard_err_snf2_br13, k_size_snf2_br13, scale_size_snf2_br13)
snf2_br13_sim_stderr
snf2_br13_sim_stderr<-as.numeric(as.data.frame(snf2_br13_sim_stderr))
cols = c(1, 2, 3, 4)
snf2_br13_sim_stderr[,cols] = apply(snf2_br13_sim_stderr[,cols], 2, function(x) {as.numeric(as.character(x))})
snf2_br13_sim_stderr1 <- data.frame(apply(snf2_br13_sim_stderr, 2, function(x) as.numeric(as.character(x))))
snf2_br13_sim_stderr1
snf2_br13_sim_stderr<-cbind(csv_files, similarity_snf2_br13, standard_err_snf2_br13, k_size_snf2_br13, scale_size_snf2_br13)
snf2_br13_sim_stderr1 <- data.frame(apply(snf2_br13_sim_stderr, 2, function(x) as.numeric(as.character(x))))
snf2_br13_sim_stderr1
cbind(snf2_br13_sim_stderr1, csv_files)
snf2_br13_sim_stderr
rm(snf2_br13_sim_stderr)
snf2_br13_sim_stderr<-cbind(similarity_snf2_br13, standard_err_snf2_br13, k_size_snf2_br13, scale_size_snf2_br13)
# convert from factor/character to numeric
snf2_br13_sim_stderr <- data.frame(apply(snf2_br13_sim_stderr, 2, function(x) as.numeric(as.character(x))))
# bind csv_file_name (character) column
snf2_br13_sim_stderr <-cbind(csv_files, snf2_br13_sim_stderr)
snf2_br13_sim_stderr
plot_all<-function(plot_data){
library(ggplot2)
ggplot(plot_data, aes(x = plot_data[5], y = plot_data[4], ymin=plot_data[2]-plot_data[3], ymax=plot_data[2]+plot_data[3])) +
geom_point() + ggtitle("All") + ylim(0,1) +
theme(axis.text.x = element_text(angle=45))  +
ylab("Average Percent Similarity") + xlab("Sourmash Scaled Parameter")  +
scale_x_log10(breaks=plot_data[5], labels = comma) +
geom_errorbar(width=0.2) + facet_wrap(~ plot_data[4])
}
plot_all(snf2_br13_sim_stderr)
snf2_br13_sim_stderr
plot_all<-function(plot_data){
library(ggplot2)
ggplot(plot_data, aes(x = plot_data[5], y = plot_data[2], ymin=plot_data[2]-plot_data[3], ymax=plot_data[2]+plot_data[3])) +
geom_point() + ggtitle("All") + ylim(0,1) +
theme(axis.text.x = element_text(angle=45))  +
ylab("Average Percent Similarity") + xlab("Sourmash Scaled Parameter")  +
scale_x_log10(breaks=plot_data[5], labels = comma) +
geom_errorbar(width=0.2) + facet_wrap(~ plot_data[4])
}
plot_all(snf2_br13_sim_stderr)
plot_all<-function(plot_data){
library(ggplot2)
ggplot(plot_data, aes_string(x = colnames(plot_data)[5], y = colnames(plot_data)[2], ymin=colnames(plot_data)[2]-colnames(plot_data)[3], colnames(plot_data)[2]+colnames(plot_data)[3])) +
geom_point() + ggtitle("All") + ylim(0,1) +
theme(axis.text.x = element_text(angle=45))  +
ylab("Average Percent Similarity") + xlab("Sourmash Scaled Parameter")  +
scale_x_log10(breaks=colnames(plot_data)[5], labels = comma) +
geom_errorbar(width=0.2) + facet_wrap(~ plot_data[4])
}
plot_all(snf2_br13_sim_stderr)
plot_all<-function(plot_data){
library(ggplot2)
ggplot(plot_data, aes_string(x = colnames(plot_data)[5], y = colnames(plot_data)[2], ymin=(plot_data)[2]-(plot_data)[3], (plot_data)[2]+(plot_data)[3])) +
geom_point() + ggtitle("All") + ylim(0,1) +
theme(axis.text.x = element_text(angle=45))  +
ylab("Average Percent Similarity") + xlab("Sourmash Scaled Parameter")  +
scale_x_log10(breaks=colnames(plot_data)[5], labels = comma) +
geom_errorbar(width=0.2) + facet_wrap(~ (plot_data)[4])
}
plot_all(snf2_br13_sim_stderr)
plot_all<-function(plot_data){
library(ggplot2)
ggplot(plot_data, aes_string(x = colnames(plot_data)[5], y = colnames(plot_data)[2], ymin=(plot_data)[2]-(plot_data)[3], (plot_data)[2]+(plot_data)[3])) +
geom_point() + ggtitle("All") + ylim(0,1) +
theme(axis.text.x = element_text(angle=45))  +
ylab("Average Percent Similarity") + xlab("Sourmash Scaled Parameter")  +
scale_x_log10(breaks=colnames(plot_data)[5], labels = comma) +
geom_errorbar(width=0.2) + facet_wrap(~ names(plot_data)[4])
}
plot_all(snf2_br13_sim_stderr)
plot_all<-function(plot_data){
library(ggplot2)
environment = environment()
plot<-ggplot(plot_data, aes_string(x = colnames(plot_data)[5], y = colnames(plot_data)[2], ymin=(plot_data)[2]-(plot_data)[3], (plot_data)[2]+(plot_data)[3])) +
geom_point() + ggtitle("All") + ylim(0,1) +
theme(axis.text.x = element_text(angle=45))  +
ylab("Average Percent Similarity") + xlab("Sourmash Scaled Parameter")  +
scale_x_log10(breaks=colnames(plot_data)[5], labels = comma) +
geom_errorbar(width=0.2)
plot + facet_wrap(~ names(plot_data)[4])
}
plot_all(snf2_br13_sim_stderr)
plot_all<-function(plot_data){
library(ggplot2)
environment = environment()
plot<-ggplot(plot_data, aes_string(x = colnames(plot_data)[5], y = colnames(plot_data)[2], ymin=(plot_data)[2]-(plot_data)[3], (plot_data)[2]+(plot_data)[3])) +
geom_point() + ggtitle("All") + ylim(0,1) +
theme(axis.text.x = element_text(angle=45))  +
ylab("Average Percent Similarity") + xlab("Sourmash Scaled Parameter")  +
scale_x_log10(breaks=colnames(plot_data)[5], labels = comma) +
geom_errorbar(width=0.2)
#plot + facet_wrap(~ names(plot_data)[4])
}
plot_all(snf2_br13_sim_stderr)
plot<-plot_all(snf2_br13_sim_stderr)
plot
